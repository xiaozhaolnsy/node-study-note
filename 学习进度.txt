Day1 2020-07-18 浏览文档
========================
12:00-15:00 浏览文档1-3章（Node简介、模块机制、异步IO）

	初识Node

	Node是一个支持事件驱动、异步、非阻塞IO的单线程服务端JS平台，
	其目的在于提供性能好能并发且便捷开发轻量级WEB环境。
--------------------------------------------------------------------------------
	心得：感觉抽象、准备接下来用一小时浏览下4-5章后再进行规划。

15:30-16:30 浏览文档4、5章（异步编程、内存控制）

	1、什么是事件驱动？
	Node是一个单线程的语言，采用事件驱动和异步回调的机制。
	事件驱动的实质是通过主循环加事件触发的方式来运行程序。
	Tick:每次循环的过程。每次Tick（观察者）查看是否有事件待处理
		->有，取出事件和相关回调。
		->回调的实现。
	2、Node优势：基于事件驱动的非阻塞IO模型（资源利用更好）
	   Node难点：异常处理->约定回调函数第一个参数为异常（空则无）
	3、GC->原理和JVM复制算法相似
	4、闭包->实现外部作用域访问内部作用域的方法叫闭包。

17:00-18:00 学习菜鸟教程 https://www.runoob.com/nodejs/nodejs-tutorial.html
	代码path:./study-code/step[1..x].js
	
	step1 创建服务器 1)require("http") 2)createServer
	step2 NPM：Node随同包管理工具
	step3 REPL：交互式解释器
	step4 回调函数(比较阻塞与非阻塞->异步调用后向下进行直到回调)
			->一般作为函数最后一个参数、回调函数接收错误对象作为第一个参数
20:00-22:00
	step5 事件循环
			->Node几乎每一个 API 都是支持回调函数的。
			->Node基本所有事件机制都是用设计模式中观察者模式实现。
			->events模块、eventEmitter对象、
		step6 EventEmitter类
				->.emit()触发事件
				->.on()绑定事件
	step7 Buffer
			->js只有String型，没有binary型
			->流必须用binary，Buffer随Node内核发布，使Node能处理bin
	step8 Stream
			->四种类型Readable、Writable、Duplex、Transform
			->所有Stream对象都是EventEmitter实例
				->常用事件data(read)、end、error、finish(write)
	step9 Moudle
			->exports、require
	step10 Function
			->Function be a parameter.
			->Anonymous Funcion.
	
	比较重要
	step11 Router:如何将router整合进server
									url.parse(string).query
			url.parse(string).pathname      |
						|                   |
						------ -------------------
	http://localhost:8888/start?foo=bar&hello=world
								------- -----------
								|           |
	querystring.parse(queryString)["foo"]	|
											|
							querystring.parse(queryString)["hello"]
	step12 全局对象
			->__filename、dirname
			->setTimeout(cb,ms)、clearTimeout(t)、setInteval(cb,ms)
			->console
			->process
	step13 常用工具 util
			-> .callbackify();async异步函数转换为遵循异常优先的回调风格函数
			-> .inherits();继承，不能继承构造器中属性或函数
			-> .inspect(); 将任意对象转换为字符串 ->类似Java中的.toString();
			-> .isArray()、.isRegExp()、.isDate()
	step14 文件系统
			-> fs.readFile(,fn(){})异步读 回调
			-> fs.readFileSync();同步读

Day1End 大概了解了node的写法，和一些常用的函数。计划明天开始学习web。
----------------------------------------------------------------------------


Day2 2020-07-19 了解web
========================
	10:00 
	step15 GET/POST
			->Get: get在url参数中，使用url.parse方法解析
			->Post:请求内容在请求体中，Node默认不解析（等待请求体传输耗时）
				->req绑定end事件，回调进行解析
				->解析判断有无postbody
					->有 打印
					->无 追加表单
	step16 工具模块 用到再看 os、path、net、dns、domain
	step17 Web模块
		1、什么是Web服务器？-> 3个主流Web服务器Apache、Nginx、IIS。
		驻留于网上的程序，支持HTTP、HTML、URL，提供Web信息浏览服务
		2、req和res的处理
	------------------------------------------------------------------------
大概习惯node的回调方式，了解了Web Server和client的模型，接下来开始学习Express。
